services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: siem_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: siem_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.6
    container_name: siem_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.6
    container_name: siem_kibana
    depends_on:
      - elasticsearch
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - "5601:5601"

  correlation-engine:
    build:
      context: .
      dockerfile: ./correlation/Dockerfile
    container_name: siem_correlation_engine
    depends_on:
      - kafka
      - elasticsearch
    environment:
      - KAFKA_BROKER=kafka:9092
      - ES_HOST=http://elasticsearch:9200
      - LOGS_TOPIC=logs_raw
      - ALERTS_TOPIC=alerts
      - ALERT_INDEX=alerts
      - CORRELATION_WINDOW_SECONDS=300
    restart: unless-stopped
    command: ["python", "-m", "correlation.correlation_engine"]

  indexer:
    build:
      context: .
      dockerfile: ./consumer/Dockerfile
    container_name: siem_indexer
    depends_on:
      - kafka
      - elasticsearch
    environment:
      - KAFKA_BROKER=kafka:9092
      - ES_HOST=http://elasticsearch:9200
      - LOGS_TOPIC=logs_raw
      - LOGS_INDEX=logs
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    command: ["python", "consumer/indexer.py"]

  backend-api:
    build:
      context: .
      dockerfile: ./ui/backend_api/Dockerfile
    container_name: siem_backend_api
    ports:
      - "5000:5000"
    depends_on:
      - elasticsearch
    environment:
      - ES_HOST=http://elasticsearch:9200
      - LOGS_INDEX=logs
      - ALERT_INDEX=alerts
      - API_SECRET_KEY=change-this-in-production-via-env-file
      - API_PORT=5000
      - FLASK_APP=app.py
      - FLASK_ENV=production
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    command: ["gunicorn", "-b", "0.0.0.0:5000", "ui.backend_api.app:app"]
